const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":92,\"nextId\":92,\"documentIds\":{\"0\":\"1\",\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"5\",\"5\":\"5#所有-api-及示例-📚\",\"6\":\"5#_1-文件读取-📖\",\"7\":\"5#fs-readfile-path-options-callback\",\"8\":\"5#fs-readfilesync-path-options\",\"9\":\"5#_2-文件写入-✍️\",\"10\":\"5#fs-writefile-file-data-options-callback\",\"11\":\"5#fs-writefilesync-file-data-options\",\"12\":\"5#_3-文件删除-🗑️\",\"13\":\"5#fs-unlink-path-callback\",\"14\":\"5#fs-unlinksync-path\",\"15\":\"5#_4-文件信息-i️\",\"16\":\"5#fs-stat-path-callback\",\"17\":\"5#fs-statsync-path\",\"18\":\"5#_5-目录操作-🗂️\",\"19\":\"5#fs-mkdir-path-options-callback\",\"20\":\"5#fs-mkdirsync-path-options\",\"21\":\"5#fs-readdir-path-options-callback\",\"22\":\"5#fs-readdirsync-path-options\",\"23\":\"5#_6-文件流-📄\",\"24\":\"5#fs-createreadstream-path-options\",\"25\":\"5#fs-createwritestream-path-options\",\"26\":\"5#_7-文件复制-📂\",\"27\":\"5#fs-copyfile-src-dest-callback\",\"28\":\"5#fs-copyfilesync-src-dest\",\"29\":\"5#_8-文件监听-👀\",\"30\":\"5#fs-watch-filename-options-listener\",\"31\":\"6\",\"32\":\"6#所有-api-及示例-📚\",\"33\":\"6#_1-创建服务器-🖥️\",\"34\":\"6#http-createserver-requestlistener\",\"35\":\"6#_2-服务器事件监听-📡\",\"36\":\"6#server-listen-port-hostname-backlog-callback\",\"37\":\"6#server-on-event-listener\",\"38\":\"6#_3-处理请求和响应-📬\",\"39\":\"6#req-method\",\"40\":\"6#req-url\",\"41\":\"6#res-writehead-statuscode-headers\",\"42\":\"6#_4-客户端请求-http-请求-🤝\",\"43\":\"6#http-request-options-callback\",\"44\":\"6#http-get-options-callback\",\"45\":\"6#_5-响应处理-🎯\",\"46\":\"6#res-statuscode\",\"47\":\"6#res-setheader-name-value\",\"48\":\"6#res-write-data\",\"49\":\"6#res-end-data\",\"50\":\"6#_6-请求数据处理-📥\",\"51\":\"6#req-on-data-callback\",\"52\":\"6#req-on-end-callback\",\"53\":\"6#_7-https-支持-🔒\",\"54\":\"6#https-createserver-options-requestlistener\",\"55\":\"7\",\"56\":\"7#所有-api-及示例-📚\",\"57\":\"7#_1-进程信息-i️\",\"58\":\"7#process-argv\",\"59\":\"7#process-env\",\"60\":\"7#_2-控制进程退出-🛑\",\"61\":\"7#process-exit-code\",\"62\":\"7#process-abort\",\"63\":\"7#_3-进程事件监听-📡\",\"64\":\"7#process-on-event-listener\",\"65\":\"7#要监听的常见事件\",\"66\":\"7#_4-标准输入-输出流-🖥️\",\"67\":\"7#process-stdin\",\"68\":\"7#process-stdout\",\"69\":\"7#process-stderr\",\"70\":\"7#_5-进程信息获取-🔍\",\"71\":\"7#process-cwd\",\"72\":\"7#process-chdir-directory\",\"73\":\"7#process-version\",\"74\":\"7#process-platform\",\"75\":\"7#_6-性能与资源使用-📊\",\"76\":\"7#process-memoryusage\",\"77\":\"7#process-uptime\",\"78\":\"7#_7-进程间通信-🛠️\",\"79\":\"7#process-send-message-sendhandle\",\"80\":\"7#process-on-message-callback\",\"81\":\"7#_8-执行时间控制-⏱️\",\"82\":\"7#process-hrtime-time\",\"83\":\"7#process-nexttick-callback\",\"84\":\"7#_9-环境变量与配置信息-🌐\",\"85\":\"7#process-env-node-env\",\"86\":\"7#_10-其他实用功能-🚀\",\"87\":\"7#process-title\",\"88\":\"7#process-release\",\"89\":\"7#process-sendhandle\",\"90\":\"8\",\"91\":\"9\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,19],\"1\":[1],\"2\":[1],\"3\":[1],\"4\":[2,13],\"5\":[4],\"6\":[3],\"7\":[1,20],\"8\":[1,14],\"9\":[3],\"10\":[1,19],\"11\":[1,13],\"12\":[3],\"13\":[1,16],\"14\":[1,11],\"15\":[3],\"16\":[1,16],\"17\":[1,13],\"18\":[3],\"19\":[1,16],\"20\":[1,12],\"21\":[1,15],\"22\":[1,12],\"23\":[3],\"24\":[1,20],\"25\":[1,16],\"26\":[3],\"27\":[1,16],\"28\":[1,12],\"29\":[3],\"30\":[1,18],\"31\":[2,14],\"32\":[4],\"33\":[3],\"34\":[1,34],\"35\":[3],\"36\":[1,15],\"37\":[1,15],\"38\":[3],\"39\":[1,24],\"40\":[1,21],\"41\":[1,16],\"42\":[5],\"43\":[1,39],\"44\":[1,57],\"45\":[3],\"46\":[1,10],\"47\":[1,15],\"48\":[1,11],\"49\":[1,9],\"50\":[3],\"51\":[1,21],\"52\":[1,5],\"53\":[4,12],\"54\":[1,31],\"55\":[2,14],\"56\":[4],\"57\":[3],\"58\":[1,18],\"59\":[1,17],\"60\":[3],\"61\":[1,17],\"62\":[1,13],\"63\":[3],\"64\":[1,22],\"65\":[2,12],\"66\":[4],\"67\":[1,16],\"68\":[1,10],\"69\":[1,9],\"70\":[3],\"71\":[1,12],\"72\":[1,16],\"73\":[1,12],\"74\":[1,12],\"75\":[3],\"76\":[1,15],\"77\":[1,13],\"78\":[3],\"79\":[1,12],\"80\":[1,12],\"81\":[3],\"82\":[1,21],\"83\":[1,11],\"84\":[3],\"85\":[1,14],\"86\":[3],\"87\":[1,15],\"88\":[1,12],\"89\":[1,16],\"90\":[1,3],\"91\":[1]},\"averageFieldLength\":[1.7282608695652173,16.481835161050157],\"storedFields\":{\"0\":{\"h\":\"介绍页\",\"t\":[\"欢迎来到我的个人空间！😊\",\"在这里，你将发现我对技术的热情、对设计的执着以及对生活的无限好奇。无论你是想了解我的项目经验，还是寻找一些灵感和创意，我都希望你能在这里找到属于你的内容。\",\"我是一个热爱编程和创作的人，喜欢挑战自我，探索未知的领域。闲暇时，我也享受阅读、旅行和美食，希望通过这个平台与更多志同道合的朋友交流分享。\",\"希望你能在这里度过愉快的时光，欢迎留下你的足迹和建议！\",\"让我们一起探索更多可能吧！🚀\"]},\"1\":{\"h\":\"代码笔记\"},\"2\":{\"h\":\"前端\"},\"3\":{\"h\":\"NodeJS\"},\"4\":{\"h\":\"fs-文件模块\",\"t\":[\"fs 模块是 Node.js 的核心模块之一，提供了与文件系统进行交互的 API。通过 fs 模块，可以执行文件的读取、写入、删除等操作。\"]},\"5\":{\"h\":\"所有 API 及示例 📚\"},\"6\":{\"h\":\"1. 文件读取 📖\"},\"7\":{\"h\":\"\",\"t\":[\"描述：异步读取文件内容。\",\"示例：\",\"const fs = require('fs'); fs.readFile('example.txt', 'utf8', (err, data) => { if (err) throw err; console.log(data); // 输出文件内容 });\"]},\"8\":{\"h\":\"\",\"t\":[\"描述：同步读取文件内容。\",\"示例：\",\"const data = fs.readFileSync('example.txt', 'utf8'); console.log(data); // 输出文件内容\"]},\"9\":{\"h\":\"2. 文件写入 ✍️\"},\"10\":{\"h\":\"\",\"t\":[\"描述：异步写入文件内容，如果文件不存在则创建文件。\",\"示例：\",\"fs.writeFile('example.txt', 'Hello World!', (err) => { if (err) throw err; console.log('文件已保存!'); // 文件保存成功 });\"]},\"11\":{\"h\":\"\",\"t\":[\"描述：同步写入文件内容。\",\"示例：\",\"fs.writeFileSync('example.txt', 'Hello World!'); console.log('文件已保存!'); // 文件保存成功\"]},\"12\":{\"h\":\"3. 文件删除 🗑️\"},\"13\":{\"h\":\"\",\"t\":[\"描述：异步删除文件。\",\"示例：\",\"fs.unlink('example.txt', (err) => { if (err) throw err; console.log('文件已删除!'); // 文件删除成功 });\"]},\"14\":{\"h\":\"\",\"t\":[\"描述：同步删除文件。\",\"示例：\",\"fs.unlinkSync('example.txt'); console.log('文件已删除!'); // 文件删除成功\"]},\"15\":{\"h\":\"4. 文件信息 ℹ️\"},\"16\":{\"h\":\"\",\"t\":[\"描述：获取文件的状态信息。\",\"示例：\",\"fs.stat('example.txt', (err, stats) => { if (err) throw err; console.log(stats); // 输出文件状态信息 });\"]},\"17\":{\"h\":\"\",\"t\":[\"描述：同步获取文件的状态信息。\",\"示例：\",\"const stats = fs.statSync('example.txt'); console.log(stats); // 输出文件状态信息\"]},\"18\":{\"h\":\"5. 目录操作 🗂️\"},\"19\":{\"h\":\"\",\"t\":[\"描述：异步创建目录。\",\"示例：\",\"fs.mkdir('newDir', { recursive: true }, (err) => { if (err) throw err; console.log('目录已创建!'); });\"]},\"20\":{\"h\":\"\",\"t\":[\"描述：同步创建目录。\",\"示例：\",\"fs.mkdirSync('newDir', { recursive: true }); console.log('目录已创建!');\"]},\"21\":{\"h\":\"\",\"t\":[\"描述：异步读取目录内容。\",\"示例：\",\"fs.readdir('someDir', (err, files) => { if (err) throw err; console.log(files); // 输出目录中的文件 });\"]},\"22\":{\"h\":\"\",\"t\":[\"描述：同步读取目录内容。\",\"示例：\",\"const files = fs.readdirSync('someDir'); console.log(files); // 输出目录中的文件\"]},\"23\":{\"h\":\"6. 文件流 📄\"},\"24\":{\"h\":\"\",\"t\":[\"描述：创建可读流，用于读取文件。\",\"示例：\",\"const readStream = fs.createReadStream('example.txt'); readStream.on('data', (chunk) => { console.log(chunk.toString()); // 输出文件内容 });\"]},\"25\":{\"h\":\"\",\"t\":[\"描述：创建可写流，用于写入文件。\",\"示例：\",\"const writeStream = fs.createWriteStream('example.txt'); writeStream.write('Hello World!'); writeStream.end();\"]},\"26\":{\"h\":\"7. 文件复制 📂\"},\"27\":{\"h\":\"\",\"t\":[\"描述：异步复制文件。\",\"示例：\",\"fs.copyFile('source.txt', 'destination.txt', (err) => { if (err) throw err; console.log('文件已复制!'); });\"]},\"28\":{\"h\":\"\",\"t\":[\"描述：同步复制文件。\",\"示例：\",\"fs.copyFileSync('source.txt', 'destination.txt'); console.log('文件已复制!');\"]},\"29\":{\"h\":\"8. 文件监听 👀\"},\"30\":{\"h\":\"\",\"t\":[\"描述：监视文件或目录的变化。\",\"示例：\",\"fs.watch('example.txt', (eventType, filename) => { if (filename) { console.log(`${filename} 文件发生了变化: ${eventType}`); } });\"]},\"31\":{\"h\":\"http-协议模块\",\"t\":[\"http 模块是 Node.js 的核心模块之一，用于构建基于 HTTP 协议的网络应用程序。通过 http 模块，可以创建服务器、处理客户端请求、发送响应等操作。\"]},\"32\":{\"h\":\"所有 API 及示例 📚\"},\"33\":{\"h\":\"1. 创建服务器 🖥️\"},\"34\":{\"h\":\"\",\"t\":[\"描述：创建一个新的 HTTP 服务器实例。\",\"示例：\",\"const http = require('http'); const server = http.createServer((req, res) => { res.statusCode = 200; res.setHeader('Content-Type', 'text/plain'); res.end('Hello World\\\\n'); }); server.listen(3000, '127.0.0.1', () => { console.log('服务器运行在 http://127.0.0.1:3000/'); });\"]},\"35\":{\"h\":\"2. 服务器事件监听 📡\"},\"36\":{\"h\":\"\",\"t\":[\"描述：使服务器开始监听指定的端口和主机名。\",\"示例：\",\"server.listen(3000, '127.0.0.1', () => { console.log('服务器已启动，监听端口 3000'); });\"]},\"37\":{\"h\":\"\",\"t\":[\"描述：为服务器添加事件监听器。\",\"示例：\",\"server.on('connection', (socket) => { console.log('新连接已建立'); }); server.on('error', (err) => { console.error('服务器错误:', err); });\"]},\"38\":{\"h\":\"3. 处理请求和响应 📬\"},\"39\":{\"h\":\"\",\"t\":[\"描述：HTTP 请求的方法（如 GET, POST）。\",\"示例：\",\"const server = http.createServer((req, res) => { if (req.method === 'GET') { // 处理 GET 请求 } else if (req.method === 'POST') { // 处理 POST 请求 } res.end('请求处理完成'); });\"]},\"40\":{\"h\":\"\",\"t\":[\"描述：请求的 URL。\",\"示例：\",\"const server = http.createServer((req, res) => { console.log(`请求的 URL: ${req.url}`); res.end('URL 已记录'); });\"]},\"41\":{\"h\":\"\",\"t\":[\"描述：写入响应头。\",\"示例：\",\"res.writeHead(200, { 'Content-Type': 'application/json' }); res.end(JSON.stringify({ message: '成功' }));\"]},\"42\":{\"h\":\"4. 客户端请求 HTTP 请求 🤝\"},\"43\":{\"h\":\"\",\"t\":[\"描述：发起一个 HTTP 请求。\",\"示例：\",\"const options = { hostname: 'www.example.com', port: 80, path: '/', method: 'GET' }; const req = http.request(options, (res) => { console.log(`状态码: ${res.statusCode}`); res.on('data', (chunk) => { console.log(`响应主体: ${chunk}`); }); res.on('end', () => { console.log('响应已完成'); }); }); req.on('error', (e) => { console.error(`请求遇到问题: ${e.message}`); }); req.end();\"]},\"44\":{\"h\":\"\",\"t\":[\"描述：发起一个 GET 请求，简化了 http.request 的调用。\",\"示例：\",\"http.get('http://www.example.com', (res) => { const { statusCode } = res; const contentType = res.headers['content-type']; let error; if (statusCode !== 200) { error = new Error('请求失败。\\\\n' + `状态码: ${statusCode}`); } if (error) { console.error(error.message); // 消费响应数据以释放内存 res.resume(); return; } res.setEncoding('utf8'); let rawData = ''; res.on('data', (chunk) => { rawData += chunk; }); res.on('end', () => { try { const parsedData = JSON.parse(rawData); console.log(parsedData); } catch (e) { console.error(e.message); } }); }).on('error', (e) => { console.error(`请求遇到问题: ${e.message}`); });\"]},\"45\":{\"h\":\"5. 响应处理 🎯\"},\"46\":{\"h\":\"\",\"t\":[\"描述：设置或获取响应的状态码。\",\"示例：\",\"res.statusCode = 404; res.end('未找到资源');\"]},\"47\":{\"h\":\"\",\"t\":[\"描述：设置响应头。\",\"示例：\",\"res.setHeader('Content-Type', 'text/html'); res.end('<h1>你好，世界！</h1>');\"]},\"48\":{\"h\":\"\",\"t\":[\"描述：分块写入响应主体。\",\"示例：\",\"res.write('<p>第一部分内容。</p>'); res.write('<p>第二部分内容。</p>'); res.end();\"]},\"49\":{\"h\":\"\",\"t\":[\"描述：结束响应，发送数据（如果有）。\",\"示例：\",\"res.end('响应结束');\"]},\"50\":{\"h\":\"6. 请求数据处理 📥\"},\"51\":{\"h\":\"\",\"t\":[\"描述：接收请求数据块。\",\"示例：\",\"let body = ''; req.on('data', (chunk) => { body += chunk; }); req.on('end', () => { console.log(`请求主体: ${body}`); res.end('数据接收完成'); });\"]},\"52\":{\"h\":\"\",\"t\":[\"描述：请求数据接收完毕。\",\"示例： 如上例所示。\"]},\"53\":{\"h\":\"7. HTTPS 支持 🔒\",\"t\":[\"虽然 http 模块主要用于 HTTP 协议，但结合 https 模块，可以实现 HTTPS 支持。\"]},\"54\":{\"h\":\"\",\"t\":[\"描述：创建一个 HTTPS 服务器。\",\"示例：\",\"const https = require('https'); const fs = require('fs'); const options = { key: fs.readFileSync('key.pem'), cert: fs.readFileSync('cert.pem') }; const server = https.createServer(options, (req, res) => { res.writeHead(200); res.end('安全连接建立'); }); server.listen(443, () => { console.log('HTTPS 服务器已启动，监听端口 443'); });\"]},\"55\":{\"h\":\"process-进程模块\",\"t\":[\"process 模块是 Node.js 的核心模块之一，提供了与当前 Node.js 进程相关的 API。通过 process 模块，可以获取环境信息、控制进程的退出、监听事件等操作。\"]},\"56\":{\"h\":\"所有 API 及示例 📚\"},\"57\":{\"h\":\"1. 进程信息 ℹ️\"},\"58\":{\"h\":\"\",\"t\":[\"描述：一个数组，包含启动 Node.js 进程时的命令行参数。\",\"示例：\",\"// 假设运行命令: node app.js foo bar console.log(process.argv); // 输出: ['node', 'app.js', 'foo', 'bar']\"]},\"59\":{\"h\":\"\",\"t\":[\"描述：包含用户环境的对象，可以访问和设置环境变量。\",\"示例：\",\"console.log(process.env.PATH); // 输出 PATH 环境变量 // 设置环境变量 process.env.NODE_ENV = 'production'; console.log(process.env.NODE_ENV); // 输出 'production'\"]},\"60\":{\"h\":\"2. 控制进程退出 🛑\"},\"61\":{\"h\":\"\",\"t\":[\"描述：退出当前进程，code 参数表示退出码，默认是 0。\",\"示例：\",\"if (someError) { console.error('发生错误，进程即将退出。'); process.exit(1); }\"]},\"62\":{\"h\":\"\",\"t\":[\"描述：立即中止 Node.js 进程，生成一个核心转储（core dump）。\",\"示例：\",\"// 在调试某些严重错误时使用 process.abort();\"]},\"63\":{\"h\":\"3. 进程事件监听 📡\"},\"64\":{\"h\":\"\",\"t\":[\"描述：为进程添加事件监听器。\",\"示例：\",\"// 监听未捕获的异常 process.on('uncaughtException', (err) => { console.error('未捕获的异常:', err); process.exit(1); }); // 监听进程即将退出 process.on('exit', (code) => { console.log(`进程即将退出，退出码: ${code}`); });\"]},\"65\":{\"h\":\"要监听的常见事件：\",\"t\":[\"exit：进程将要退出时触发。\",\"uncaughtException：未捕获的异常触发。\",\"SIGINT：收到中断信号（如 Ctrl+C）时触发。\",\"SIGTERM：收到终止信号时触发。\"]},\"66\":{\"h\":\"4. 标准输入/输出流 🖥️\"},\"67\":{\"h\":\"\",\"t\":[\"描述：可读的标准输入流。\",\"示例：\",\"process.stdin.on('data', (chunk) => { console.log(`输入的数据: ${chunk}`); }); process.stdin.resume();\"]},\"68\":{\"h\":\"\",\"t\":[\"描述：可写的标准输出流。\",\"示例：\",\"process.stdout.write('Hello, World!\\\\n');\"]},\"69\":{\"h\":\"\",\"t\":[\"描述：可写的标准错误流。\",\"示例：\",\"process.stderr.write('错误信息\\\\n');\"]},\"70\":{\"h\":\"5. 进程信息获取 🔍\"},\"71\":{\"h\":\"\",\"t\":[\"描述：返回 Node.js 进程的当前工作目录。\",\"示例：\",\"console.log('当前工作目录:', process.cwd());\"]},\"72\":{\"h\":\"\",\"t\":[\"描述：改变 Node.js 进程的当前工作目录。\",\"示例：\",\"process.chdir('/path/to/directory'); console.log('当前工作目录已更改为:', process.cwd());\"]},\"73\":{\"h\":\"\",\"t\":[\"描述：获取 Node.js 的版本号。\",\"示例：\",\"console.log('Node.js 版本:', process.version);\"]},\"74\":{\"h\":\"\",\"t\":[\"描述：获取 Node.js 进程运行的操作系统平台。\",\"示例：\",\"console.log('操作系统平台:', process.platform);\"]},\"75\":{\"h\":\"6. 性能与资源使用 📊\"},\"76\":{\"h\":\"\",\"t\":[\"描述：返回一个对象，包含 Node.js 进程的内存使用情况。\",\"示例：\",\"const memoryUsage = process.memoryUsage(); console.log('内存使用情况:', memoryUsage);\"]},\"77\":{\"h\":\"\",\"t\":[\"描述：返回 Node.js 进程已经运行的秒数。\",\"示例：\",\"console.log('进程运行时间:', process.uptime(), '秒');\"]},\"78\":{\"h\":\"7. 进程间通信 🛠️\"},\"79\":{\"h\":\"\",\"t\":[\"描述：用于在通过 child_process 模块创建的子进程中发送消息到父进程。（仅在子进程中可用）\",\"示例：\",\"if (process.send) { process.send({ msg: '子进程消息' }); }\"]},\"80\":{\"h\":\"\",\"t\":[\"描述：监听来自父进程的消息。（仅在子进程中可用）\",\"示例：\",\"process.on('message', (message) => { console.log('收到父进程的消息:', message); });\"]},\"81\":{\"h\":\"8. 执行时间控制 ⏱️\"},\"82\":{\"h\":\"\",\"t\":[\"描述：返回一个高分辨率的实时时间，通常用于性能测量。\",\"示例：\",\"const startTime = process.hrtime(); // 执行一些操作 const diff = process.hrtime(startTime); console.log(`操作耗时: ${diff[0]} 秒 和 ${diff[1]} 纳秒`);\"]},\"83\":{\"h\":\"\",\"t\":[\"描述：在当前操作完成后，尽快执行回调函数。\",\"示例：\",\"process.nextTick(() => { console.log('nextTick 回调'); });\"]},\"84\":{\"h\":\"9. 环境变量与配置信息 🌐\"},\"85\":{\"h\":\"\",\"t\":[\"描述：通常用于区分开发环境和生产环境。\",\"示例：\",\"if (process.env.NODE_ENV === 'production') { // 生产环境配置 } else { // 开发环境配置 }\"]},\"86\":{\"h\":\"10. 其他实用功能 🚀\"},\"87\":{\"h\":\"\",\"t\":[\"描述：获取或设置进程的标题，这会在系统进程列表中显示。\",\"示例：\",\"console.log('默认进程标题:', process.title); process.title = 'my-node-app'; console.log('更改后的进程标题:', process.title);\"]},\"88\":{\"h\":\"\",\"t\":[\"描述：关于 Node.js 引擎的详细信息。\",\"示例：\",\"console.log('Node.js 版本信息:', process.release);\"]},\"89\":{\"h\":\"\",\"t\":[\"描述：发送给当前进程的句柄（仅在子进程中可用）。\",\"示例：\",\"// 在子进程中接收句柄 process.on('message', (msg, handle) => { if (handle) { console.log('收到的句柄:', handle); } });\"]},\"90\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"91\":{\"h\":\"模块\"}},\"dirtCount\":0,\"index\":[[\"引擎的详细信息\",{\"1\":{\"88\":1}}],[\"关于\",{\"1\":{\"88\":1}}],[\"更改后的进程标题\",{\"1\":{\"87\":1}}],[\"默认进程标题\",{\"1\":{\"87\":1}}],[\"默认是\",{\"1\":{\"61\":1}}],[\"这会在系统进程列表中显示\",{\"1\":{\"87\":1}}],[\"其他实用功能\",{\"0\":{\"86\":1}}],[\"开发环境配置\",{\"1\":{\"85\":1}}],[\"生产环境配置\",{\"1\":{\"85\":1}}],[\"生成一个核心转储\",{\"1\":{\"62\":1}}],[\"🌐\",{\"0\":{\"84\":1}}],[\"🎯\",{\"0\":{\"45\":1}}],[\"9\",{\"0\":{\"84\":1}}],[\"回调\",{\"1\":{\"83\":1}}],[\"尽快执行回调函数\",{\"1\":{\"83\":1}}],[\"纳秒`\",{\"1\":{\"82\":1}}],[\"和\",{\"1\":{\"82\":1}}],[\"执行一些操作\",{\"1\":{\"82\":1}}],[\"执行时间控制\",{\"0\":{\"81\":1}}],[\"通常用于区分开发环境和生产环境\",{\"1\":{\"85\":1}}],[\"通常用于性能测量\",{\"1\":{\"82\":1}}],[\"通过\",{\"1\":{\"4\":1,\"31\":1,\"55\":1}}],[\"⏱️\",{\"0\":{\"81\":1}}],[\"子进程消息\",{\"1\":{\"79\":1}}],[\"仅在子进程中可用\",{\"1\":{\"79\":1,\"80\":1,\"89\":1}}],[\"秒\",{\"1\":{\"77\":1,\"82\":1}}],[\"内存使用情况\",{\"1\":{\"76\":1}}],[\"性能与资源使用\",{\"0\":{\"75\":1}}],[\"操作系统平台\",{\"1\":{\"74\":1}}],[\"version\",{\"1\":{\"73\":1}}],[\"版本信息\",{\"1\":{\"88\":1}}],[\"版本\",{\"1\":{\"73\":1}}],[\"获取或设置进程的标题\",{\"1\":{\"87\":1}}],[\"获取\",{\"1\":{\"73\":1,\"74\":1}}],[\"获取文件的状态信息\",{\"1\":{\"16\":1}}],[\"改变\",{\"1\":{\"72\":1}}],[\"当前工作目录已更改为\",{\"1\":{\"72\":1}}],[\"当前工作目录\",{\"1\":{\"71\":1}}],[\"返回一个高分辨率的实时时间\",{\"1\":{\"82\":1}}],[\"返回一个对象\",{\"1\":{\"76\":1}}],[\"返回\",{\"1\":{\"71\":1,\"77\":1}}],[\"错误信息\",{\"1\":{\"69\":1}}],[\"可写的标准错误流\",{\"1\":{\"69\":1}}],[\"可写的标准输出流\",{\"1\":{\"68\":1}}],[\"可读的标准输入流\",{\"1\":{\"67\":1}}],[\"可以访问和设置环境变量\",{\"1\":{\"59\":1}}],[\"可以获取环境信息\",{\"1\":{\"55\":1}}],[\"可以实现\",{\"1\":{\"53\":1}}],[\"可以创建服务器\",{\"1\":{\"31\":1}}],[\"可以执行文件的读取\",{\"1\":{\"4\":1}}],[\"标准输入\",{\"0\":{\"66\":1}}],[\"收到的句柄\",{\"1\":{\"89\":1}}],[\"收到父进程的消息\",{\"1\":{\"80\":1}}],[\"收到终止信号时触发\",{\"1\":{\"65\":1}}],[\"收到中断信号\",{\"1\":{\"65\":1}}],[\"时触发\",{\"1\":{\"65\":1}}],[\"要监听的常见事件\",{\"0\":{\"65\":1}}],[\"退出码\",{\"1\":{\"64\":1}}],[\"退出当前进程\",{\"1\":{\"61\":1}}],[\"未捕获的异常触发\",{\"1\":{\"65\":1}}],[\"未捕获的异常\",{\"1\":{\"64\":1}}],[\"未找到资源\",{\"1\":{\"46\":1}}],[\"为进程添加事件监听器\",{\"1\":{\"64\":1}}],[\"为服务器添加事件监听器\",{\"1\":{\"37\":1}}],[\"在子进程中接收句柄\",{\"1\":{\"89\":1}}],[\"在当前操作完成后\",{\"1\":{\"83\":1}}],[\"在调试某些严重错误时使用\",{\"1\":{\"62\":1}}],[\"在这里\",{\"1\":{\"0\":1}}],[\"立即中止\",{\"1\":{\"62\":1}}],[\"参数表示退出码\",{\"1\":{\"61\":1}}],[\"控制进程退出\",{\"0\":{\"60\":1}}],[\"控制进程的退出\",{\"1\":{\"55\":1}}],[\"环境变量与配置信息\",{\"0\":{\"84\":1}}],[\"环境变量\",{\"1\":{\"59\":1}}],[\"包含\",{\"1\":{\"76\":1}}],[\"包含用户环境的对象\",{\"1\":{\"59\":1}}],[\"包含启动\",{\"1\":{\"58\":1}}],[\"abort\",{\"1\":{\"62\":1}}],[\"argv\",{\"1\":{\"58\":1}}],[\"app\",{\"1\":{\"58\":2,\"87\":1}}],[\"application\",{\"1\":{\"41\":1}}],[\"api\",{\"0\":{\"5\":1,\"32\":1,\"56\":1},\"1\":{\"4\":1,\"55\":1}}],[\"bar\",{\"1\":{\"58\":2}}],[\"body\",{\"1\":{\"51\":3}}],[\"假设运行命令\",{\"1\":{\"58\":1}}],[\"一个数组\",{\"1\":{\"58\":1}}],[\"进程间通信\",{\"0\":{\"78\":1}}],[\"进程运行时间\",{\"1\":{\"77\":1}}],[\"进程运行的操作系统平台\",{\"1\":{\"74\":1}}],[\"进程已经运行的秒数\",{\"1\":{\"77\":1}}],[\"进程的内存使用情况\",{\"1\":{\"76\":1}}],[\"进程的当前工作目录\",{\"1\":{\"71\":1,\"72\":1}}],[\"进程将要退出时触发\",{\"1\":{\"65\":1}}],[\"进程事件监听\",{\"0\":{\"63\":1}}],[\"进程\",{\"1\":{\"62\":1}}],[\"进程即将退出\",{\"1\":{\"61\":1}}],[\"进程时的命令行参数\",{\"1\":{\"58\":1}}],[\"进程信息获取\",{\"0\":{\"70\":1}}],[\"进程信息\",{\"0\":{\"57\":1}}],[\"进程相关的\",{\"1\":{\"55\":1}}],[\"进程模块\",{\"0\":{\"55\":1}}],[\"提供了与当前\",{\"1\":{\"55\":1}}],[\"提供了与文件系统进行交互的\",{\"1\":{\"4\":1}}],[\"安全连接建立\",{\"1\":{\"54\":1}}],[\"key\",{\"1\":{\"54\":2}}],[\"但结合\",{\"1\":{\"53\":1}}],[\"虽然\",{\"1\":{\"53\":1}}],[\"支持\",{\"0\":{\"53\":1},\"1\":{\"53\":1}}],[\"数据接收完成\",{\"1\":{\"51\":1}}],[\"接收请求数据块\",{\"1\":{\"51\":1}}],[\"结束响应\",{\"1\":{\"49\":1}}],[\"分块写入响应主体\",{\"1\":{\"48\":1}}],[\"<p>第二部分内容\",{\"1\":{\"48\":1}}],[\"<p>第一部分内容\",{\"1\":{\"48\":1}}],[\"<\",{\"1\":{\"47\":1,\"48\":2}}],[\"<h1>你好\",{\"1\":{\"47\":1}}],[\"世界\",{\"1\":{\"47\":1}}],[\"设置环境变量\",{\"1\":{\"59\":1}}],[\"设置响应头\",{\"1\":{\"47\":1}}],[\"设置或获取响应的状态码\",{\"1\":{\"46\":1}}],[\"响应结束\",{\"1\":{\"49\":1}}],[\"响应处理\",{\"0\":{\"45\":1}}],[\"响应已完成\",{\"1\":{\"43\":1}}],[\"rawdata\",{\"1\":{\"44\":3}}],[\"release\",{\"1\":{\"88\":1}}],[\"return\",{\"1\":{\"44\":1}}],[\"resume\",{\"1\":{\"44\":1,\"67\":1}}],[\"res\",{\"1\":{\"34\":4,\"39\":2,\"40\":2,\"41\":2,\"43\":4,\"44\":7,\"46\":2,\"47\":2,\"48\":3,\"49\":1,\"51\":1,\"54\":3}}],[\"request\",{\"1\":{\"43\":1,\"44\":1}}],[\"require\",{\"1\":{\"7\":1,\"34\":1,\"54\":2}}],[\"req\",{\"1\":{\"34\":1,\"39\":3,\"40\":2,\"43\":3,\"51\":2,\"54\":1}}],[\"readstream\",{\"1\":{\"24\":2}}],[\"readdirsync\",{\"1\":{\"22\":1}}],[\"readdir\",{\"1\":{\"21\":1}}],[\"readfilesync\",{\"1\":{\"8\":1,\"54\":2}}],[\"readfile\",{\"1\":{\"7\":1}}],[\"recursive\",{\"1\":{\"19\":1,\"20\":1}}],[\"消费响应数据以释放内存\",{\"1\":{\"44\":1}}],[\"+=\",{\"1\":{\"44\":1,\"51\":1}}],[\"+\",{\"1\":{\"44\":1}}],[\"的版本号\",{\"1\":{\"73\":1}}],[\"的调用\",{\"1\":{\"44\":1}}],[\"的核心模块之一\",{\"1\":{\"4\":1,\"31\":1,\"55\":1}}],[\"简化了\",{\"1\":{\"44\":1}}],[\"options\",{\"1\":{\"43\":2,\"54\":2}}],[\"on\",{\"1\":{\"24\":1,\"37\":2,\"43\":3,\"44\":3,\"51\":2,\"64\":2,\"67\":1,\"80\":1,\"89\":1}}],[\"发生错误\",{\"1\":{\"61\":1}}],[\"发送给当前进程的句柄\",{\"1\":{\"89\":1}}],[\"发送数据\",{\"1\":{\"49\":1}}],[\"发送响应等操作\",{\"1\":{\"31\":1}}],[\"发起一个\",{\"1\":{\"43\":1,\"44\":1}}],[\"🤝\",{\"0\":{\"42\":1}}],[\"客户端请求\",{\"0\":{\"42\":1}}],[\"成功\",{\"1\":{\"41\":1}}],[\"已记录\",{\"1\":{\"40\":1}}],[\"请求数据接收完毕\",{\"1\":{\"52\":1}}],[\"请求数据处理\",{\"0\":{\"50\":1}}],[\"请求失败\",{\"1\":{\"44\":1}}],[\"请求的\",{\"1\":{\"40\":1}}],[\"请求的方法\",{\"1\":{\"39\":1}}],[\"请求处理完成\",{\"1\":{\"39\":1}}],[\"请求\",{\"0\":{\"42\":1},\"1\":{\"39\":2,\"43\":1,\"44\":1}}],[\"my\",{\"1\":{\"87\":1}}],[\"msg\",{\"1\":{\"79\":1,\"89\":1}}],[\"memoryusage\",{\"1\":{\"76\":3}}],[\"message\",{\"1\":{\"41\":1,\"43\":1,\"44\":3,\"80\":3,\"89\":1}}],[\"method\",{\"1\":{\"39\":2,\"43\":1}}],[\"mkdirsync\",{\"1\":{\"20\":1}}],[\"mkdir\",{\"1\":{\"19\":1}}],[\"platform\",{\"1\":{\"74\":1}}],[\"plain\",{\"1\":{\"34\":1}}],[\"production\",{\"1\":{\"59\":2,\"85\":1}}],[\"process\",{\"0\":{\"55\":1},\"1\":{\"55\":2,\"58\":1,\"59\":3,\"61\":1,\"62\":1,\"64\":3,\"67\":2,\"68\":1,\"69\":1,\"71\":1,\"72\":2,\"73\":1,\"74\":1,\"76\":1,\"77\":1,\"79\":3,\"80\":1,\"82\":2,\"83\":1,\"85\":1,\"87\":3,\"88\":1,\"89\":1}}],[\"pem\",{\"1\":{\"54\":2}}],[\"p>\",{\"1\":{\"48\":2}}],[\"parse\",{\"1\":{\"44\":1}}],[\"parseddata\",{\"1\":{\"44\":2}}],[\"path\",{\"1\":{\"43\":1,\"59\":2,\"72\":1}}],[\"port\",{\"1\":{\"43\":1}}],[\"post\",{\"1\":{\"39\":3}}],[\"get\",{\"1\":{\"39\":3,\"43\":1,\"44\":2}}],[\"如上例所示\",{\"1\":{\"52\":1}}],[\"如果有\",{\"1\":{\"49\":1}}],[\"如果文件不存在则创建文件\",{\"1\":{\"10\":1}}],[\"如\",{\"1\":{\"39\":1,\"65\":1}}],[\"处理\",{\"1\":{\"39\":2}}],[\"处理请求和响应\",{\"0\":{\"38\":1}}],[\"处理客户端请求\",{\"1\":{\"31\":1}}],[\"新连接已建立\",{\"1\":{\"37\":1}}],[\"监听来自父进程的消息\",{\"1\":{\"80\":1}}],[\"监听进程即将退出\",{\"1\":{\"64\":1}}],[\"监听未捕获的异常\",{\"1\":{\"64\":1}}],[\"监听事件等操作\",{\"1\":{\"55\":1}}],[\"监听端口\",{\"1\":{\"36\":1,\"54\":1}}],[\"监视文件或目录的变化\",{\"1\":{\"30\":1}}],[\"使服务器开始监听指定的端口和主机名\",{\"1\":{\"36\":1}}],[\"服务器\",{\"1\":{\"54\":1}}],[\"服务器错误\",{\"1\":{\"37\":1}}],[\"服务器已启动\",{\"1\":{\"36\":1,\"54\":1}}],[\"服务器事件监听\",{\"0\":{\"35\":1}}],[\"服务器运行在\",{\"1\":{\"34\":1}}],[\"服务器实例\",{\"1\":{\"34\":1}}],[\"0\",{\"1\":{\"34\":4,\"36\":2,\"61\":1,\"82\":1}}],[\"let\",{\"1\":{\"44\":2,\"51\":1}}],[\"listen\",{\"1\":{\"34\":1,\"36\":1,\"54\":1}}],[\"log\",{\"1\":{\"7\":1,\"8\":1,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"16\":1,\"17\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"24\":1,\"27\":1,\"28\":1,\"30\":1,\"34\":1,\"36\":1,\"37\":1,\"40\":1,\"43\":3,\"44\":1,\"51\":1,\"54\":1,\"58\":1,\"59\":2,\"64\":1,\"67\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"76\":1,\"77\":1,\"80\":1,\"82\":1,\"83\":1,\"87\":2,\"88\":1,\"89\":1}}],[\"创建一个\",{\"1\":{\"54\":1}}],[\"创建一个新的\",{\"1\":{\"34\":1}}],[\"创建服务器\",{\"0\":{\"33\":1}}],[\"创建可写流\",{\"1\":{\"25\":1}}],[\"创建可读流\",{\"1\":{\"24\":1}}],[\"协议\",{\"1\":{\"53\":1}}],[\"协议的网络应用程序\",{\"1\":{\"31\":1}}],[\"协议模块\",{\"0\":{\"31\":1}}],[\"handle\",{\"1\":{\"89\":3}}],[\"hrtime\",{\"1\":{\"82\":2}}],[\"h1>\",{\"1\":{\"47\":1}}],[\"html\",{\"1\":{\"47\":1}}],[\"https\",{\"0\":{\"53\":1},\"1\":{\"53\":2,\"54\":5}}],[\"http\",{\"0\":{\"31\":1,\"42\":1},\"1\":{\"31\":3,\"34\":5,\"39\":2,\"40\":1,\"43\":2,\"44\":3,\"53\":2}}],[\"headers\",{\"1\":{\"44\":1}}],[\"hello\",{\"1\":{\"10\":1,\"11\":1,\"25\":1,\"34\":1,\"68\":1}}],[\"hostname\",{\"1\":{\"43\":1}}],[\"`操作耗时\",{\"1\":{\"82\":1}}],[\"`输入的数据\",{\"1\":{\"67\":1}}],[\"`进程即将退出\",{\"1\":{\"64\":1}}],[\"`请求主体\",{\"1\":{\"51\":1}}],[\"`请求遇到问题\",{\"1\":{\"43\":1,\"44\":1}}],[\"`请求的\",{\"1\":{\"40\":1}}],[\"`响应主体\",{\"1\":{\"43\":1}}],[\"`状态码\",{\"1\":{\"43\":1,\"44\":1}}],[\"`\",{\"1\":{\"30\":1,\"40\":1,\"43\":3,\"44\":2,\"51\":1,\"64\":1,\"67\":1}}],[\"`$\",{\"1\":{\"30\":1}}],[\"$\",{\"1\":{\"30\":1,\"40\":1,\"43\":3,\"44\":2,\"51\":1,\"64\":1,\"67\":1,\"82\":2}}],[\"80\",{\"1\":{\"43\":1}}],[\"8\",{\"0\":{\"29\":1,\"81\":1}}],[\"diff\",{\"1\":{\"82\":3}}],[\"directory\",{\"1\":{\"72\":1}}],[\"dump\",{\"1\":{\"62\":1}}],[\"destination\",{\"1\":{\"27\":1,\"28\":1}}],[\"data\",{\"1\":{\"7\":2,\"8\":2,\"24\":1,\"43\":1,\"44\":1,\"51\":1,\"67\":1}}],[\"7\",{\"0\":{\"26\":1,\"53\":1,\"78\":1}}],[\"用于在通过\",{\"1\":{\"79\":1}}],[\"用于构建基于\",{\"1\":{\"31\":1}}],[\"用于写入文件\",{\"1\":{\"25\":1}}],[\"用于读取文件\",{\"1\":{\"24\":1}}],[\"child\",{\"1\":{\"79\":1}}],[\"chdir\",{\"1\":{\"72\":1}}],[\"chunk\",{\"1\":{\"24\":2,\"43\":2,\"44\":2,\"51\":2,\"67\":2}}],[\"cwd\",{\"1\":{\"71\":1,\"72\":1}}],[\"ctrl+c\",{\"1\":{\"65\":1}}],[\"cert\",{\"1\":{\"54\":2}}],[\"catch\",{\"1\":{\"44\":1}}],[\"core\",{\"1\":{\"62\":1}}],[\"code\",{\"1\":{\"61\":1,\"64\":2}}],[\"com\",{\"1\":{\"43\":1,\"44\":1}}],[\"connection\",{\"1\":{\"37\":1}}],[\"contenttype\",{\"1\":{\"44\":1}}],[\"content\",{\"1\":{\"34\":1,\"41\":1,\"44\":1,\"47\":1}}],[\"console\",{\"1\":{\"7\":1,\"8\":1,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"16\":1,\"17\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"24\":1,\"27\":1,\"28\":1,\"30\":1,\"34\":1,\"36\":1,\"37\":2,\"40\":1,\"43\":4,\"44\":4,\"51\":1,\"54\":1,\"58\":1,\"59\":2,\"61\":1,\"64\":2,\"67\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"76\":1,\"77\":1,\"80\":1,\"82\":1,\"83\":1,\"87\":2,\"88\":1,\"89\":1}}],[\"const\",{\"1\":{\"7\":1,\"8\":1,\"17\":1,\"22\":1,\"24\":1,\"25\":1,\"34\":2,\"39\":1,\"40\":1,\"43\":2,\"44\":3,\"54\":4,\"76\":1,\"82\":2}}],[\"copyfilesync\",{\"1\":{\"28\":1}}],[\"copyfile\",{\"1\":{\"27\":1}}],[\"createserver\",{\"1\":{\"34\":1,\"39\":1,\"40\":1,\"54\":1}}],[\"createwritestream\",{\"1\":{\"25\":1}}],[\"createreadstream\",{\"1\":{\"24\":1}}],[\"6\",{\"0\":{\"23\":1,\"50\":1,\"75\":1}}],[\"输出流\",{\"0\":{\"66\":1}}],[\"输出\",{\"1\":{\"58\":1,\"59\":2}}],[\"输出目录中的文件\",{\"1\":{\"21\":1,\"22\":1}}],[\"输出文件状态信息\",{\"1\":{\"16\":1,\"17\":1}}],[\"输出文件内容\",{\"1\":{\"7\":1,\"8\":1,\"24\":1}}],[\"found\",{\"1\":{\"90\":1}}],[\"foo\",{\"1\":{\"58\":2}}],[\"filename\",{\"1\":{\"30\":3}}],[\"files\",{\"1\":{\"21\":2,\"22\":2}}],[\"fs\",{\"0\":{\"4\":1},\"1\":{\"4\":2,\"7\":3,\"8\":1,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"16\":1,\"17\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"30\":1,\"54\":4}}],[\"sigterm\",{\"1\":{\"65\":1}}],[\"sigint\",{\"1\":{\"65\":1}}],[\"starttime\",{\"1\":{\"82\":2}}],[\"statuscode\",{\"1\":{\"34\":1,\"43\":1,\"44\":3,\"46\":1}}],[\"statsync\",{\"1\":{\"17\":1}}],[\"stats\",{\"1\":{\"16\":2,\"17\":2}}],[\"stat\",{\"1\":{\"16\":1}}],[\"stderr\",{\"1\":{\"69\":1}}],[\"stdout\",{\"1\":{\"68\":1}}],[\"stdin\",{\"1\":{\"67\":2}}],[\"stringify\",{\"1\":{\"41\":1}}],[\"send\",{\"1\":{\"79\":2}}],[\"setencoding\",{\"1\":{\"44\":1}}],[\"setheader\",{\"1\":{\"34\":1,\"47\":1}}],[\"server\",{\"1\":{\"34\":2,\"36\":1,\"37\":2,\"39\":1,\"40\":1,\"54\":2}}],[\"someerror\",{\"1\":{\"61\":1}}],[\"somedir\",{\"1\":{\"21\":1,\"22\":1}}],[\"socket\",{\"1\":{\"37\":1}}],[\"source\",{\"1\":{\"27\":1,\"28\":1}}],[\"目录已创建\",{\"1\":{\"19\":1,\"20\":1}}],[\"目录操作\",{\"0\":{\"18\":1}}],[\"not\",{\"1\":{\"90\":1}}],[\"node\",{\"1\":{\"4\":1,\"31\":1,\"55\":2,\"58\":3,\"59\":2,\"62\":1,\"71\":1,\"72\":1,\"73\":2,\"74\":1,\"76\":1,\"77\":1,\"85\":1,\"87\":1,\"88\":2}}],[\"nodejs\",{\"0\":{\"3\":1}}],[\"nexttick\",{\"1\":{\"83\":2}}],[\"new\",{\"1\":{\"44\":1}}],[\"newdir\",{\"1\":{\"19\":1,\"20\":1}}],[\"n\",{\"1\":{\"34\":1,\"44\":1,\"68\":1,\"69\":1}}],[\"5\",{\"0\":{\"18\":1,\"45\":1,\"70\":1}}],[\"ℹ️\",{\"0\":{\"15\":1,\"57\":1}}],[\"443\",{\"1\":{\"54\":2}}],[\"404\",{\"1\":{\"46\":1,\"90\":1}}],[\"4\",{\"0\":{\"15\":1,\"42\":1,\"66\":1}}],[\"uptime\",{\"1\":{\"77\":1}}],[\"uncaughtexception\",{\"1\":{\"64\":1,\"65\":1}}],[\"unlinksync\",{\"1\":{\"14\":1}}],[\"unlink\",{\"1\":{\"13\":1}}],[\"url\",{\"1\":{\"40\":4}}],[\"utf8\",{\"1\":{\"7\":1,\"8\":1,\"44\":1}}],[\"3000\",{\"1\":{\"34\":2,\"36\":2}}],[\"3\",{\"0\":{\"12\":1,\"38\":1,\"63\":1}}],[\"同步复制文件\",{\"1\":{\"28\":1}}],[\"同步读取目录内容\",{\"1\":{\"22\":1}}],[\"同步读取文件内容\",{\"1\":{\"8\":1}}],[\"同步创建目录\",{\"1\":{\"20\":1}}],[\"同步获取文件的状态信息\",{\"1\":{\"17\":1}}],[\"同步删除文件\",{\"1\":{\"14\":1}}],[\"同步写入文件内容\",{\"1\":{\"11\":1}}],[\"www\",{\"1\":{\"43\":1,\"44\":1}}],[\"watch\",{\"1\":{\"30\":1}}],[\"writehead\",{\"1\":{\"41\":1,\"54\":1}}],[\"write\",{\"1\":{\"25\":1,\"48\":2,\"68\":1,\"69\":1}}],[\"writestream\",{\"1\":{\"25\":3}}],[\"writefilesync\",{\"1\":{\"11\":1}}],[\"writefile\",{\"1\":{\"10\":1}}],[\"world\",{\"1\":{\"10\":1,\"11\":1,\"25\":1,\"34\":1,\"68\":1}}],[\"异步复制文件\",{\"1\":{\"27\":1}}],[\"异步读取目录内容\",{\"1\":{\"21\":1}}],[\"异步读取文件内容\",{\"1\":{\"7\":1}}],[\"异步创建目录\",{\"1\":{\"19\":1}}],[\"异步删除文件\",{\"1\":{\"13\":1}}],[\"异步写入文件内容\",{\"1\":{\"10\":1}}],[\"✍️\",{\"0\":{\"9\":1}}],[\"200\",{\"1\":{\"34\":1,\"41\":1,\"44\":1,\"54\":1}}],[\"2\",{\"0\":{\"9\":1,\"35\":1,\"60\":1}}],[\"title\",{\"1\":{\"87\":3}}],[\"to\",{\"1\":{\"72\":1}}],[\"tostring\",{\"1\":{\"24\":1}}],[\"try\",{\"1\":{\"44\":1}}],[\"true\",{\"1\":{\"19\":1,\"20\":1}}],[\"text\",{\"1\":{\"34\":1,\"47\":1}}],[\"type\",{\"1\":{\"34\":1,\"41\":1,\"44\":1,\"47\":1}}],[\"throw\",{\"1\":{\"7\":1,\"10\":1,\"13\":1,\"16\":1,\"19\":1,\"21\":1,\"27\":1}}],[\"txt\",{\"1\":{\"7\":1,\"8\":1,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"16\":1,\"17\":1,\"24\":1,\"25\":1,\"27\":2,\"28\":2,\"30\":1}}],[\"if\",{\"1\":{\"7\":1,\"10\":1,\"13\":1,\"16\":1,\"19\":1,\"21\":1,\"27\":1,\"30\":1,\"39\":2,\"44\":2,\"61\":1,\"79\":1,\"85\":1,\"89\":1}}],[\"exit\",{\"1\":{\"61\":1,\"64\":2,\"65\":1}}],[\"example\",{\"1\":{\"7\":1,\"8\":1,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"16\":1,\"17\":1,\"24\":1,\"25\":1,\"30\":1,\"43\":1,\"44\":1}}],[\"env\",{\"1\":{\"59\":5,\"85\":2}}],[\"end\",{\"1\":{\"25\":1,\"34\":1,\"39\":1,\"40\":1,\"41\":1,\"43\":2,\"44\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"51\":2,\"54\":1}}],[\"e\",{\"1\":{\"43\":2,\"44\":4}}],[\"else\",{\"1\":{\"39\":1,\"85\":1}}],[\"eventtype\",{\"1\":{\"30\":2}}],[\"error\",{\"1\":{\"37\":2,\"43\":2,\"44\":9,\"61\":1,\"64\":1}}],[\"err\",{\"1\":{\"7\":3,\"10\":3,\"13\":3,\"16\":3,\"19\":3,\"21\":3,\"27\":3,\"37\":2,\"64\":2}}],[\"==\",{\"1\":{\"44\":1}}],[\"===\",{\"1\":{\"39\":2,\"85\":1}}],[\"=>\",{\"1\":{\"7\":1,\"10\":1,\"13\":1,\"16\":1,\"19\":1,\"21\":1,\"24\":1,\"27\":1,\"30\":1,\"34\":2,\"36\":1,\"37\":2,\"39\":1,\"40\":1,\"43\":4,\"44\":4,\"51\":2,\"54\":2,\"64\":2,\"67\":1,\"80\":1,\"83\":1,\"89\":1}}],[\"=\",{\"1\":{\"7\":1,\"8\":1,\"17\":1,\"22\":1,\"24\":1,\"25\":1,\"34\":3,\"39\":1,\"40\":1,\"43\":2,\"44\":5,\"46\":1,\"51\":1,\"54\":4,\"59\":1,\"76\":1,\"82\":2,\"87\":1}}],[\"示例\",{\"1\":{\"7\":1,\"8\":1,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"16\":1,\"17\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"30\":1,\"34\":1,\"36\":1,\"37\":1,\"39\":1,\"40\":1,\"41\":1,\"43\":1,\"44\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"51\":1,\"52\":1,\"54\":1,\"58\":1,\"59\":1,\"61\":1,\"62\":1,\"64\":1,\"67\":1,\"68\":1,\"69\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"82\":1,\"83\":1,\"85\":1,\"87\":1,\"88\":1,\"89\":1}}],[\"描述\",{\"1\":{\"7\":1,\"8\":1,\"10\":1,\"11\":1,\"13\":1,\"14\":1,\"16\":1,\"17\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"24\":1,\"25\":1,\"27\":1,\"28\":1,\"30\":1,\"34\":1,\"36\":1,\"37\":1,\"39\":1,\"40\":1,\"41\":1,\"43\":1,\"44\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"51\":1,\"52\":1,\"54\":1,\"58\":1,\"59\":1,\"61\":1,\"62\":1,\"64\":1,\"67\":1,\"68\":1,\"69\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"82\":1,\"83\":1,\"85\":1,\"87\":1,\"88\":1,\"89\":1}}],[\"文件发生了变化\",{\"1\":{\"30\":1}}],[\"文件监听\",{\"0\":{\"29\":1}}],[\"文件复制\",{\"0\":{\"26\":1}}],[\"文件流\",{\"0\":{\"23\":1}}],[\"文件信息\",{\"0\":{\"15\":1}}],[\"文件已复制\",{\"1\":{\"27\":1,\"28\":1}}],[\"文件已删除\",{\"1\":{\"13\":1,\"14\":1}}],[\"文件已保存\",{\"1\":{\"10\":1,\"11\":1}}],[\"文件删除成功\",{\"1\":{\"13\":1,\"14\":1}}],[\"文件删除\",{\"0\":{\"12\":1}}],[\"文件保存成功\",{\"1\":{\"10\":1,\"11\":1}}],[\"文件写入\",{\"0\":{\"9\":1}}],[\"文件读取\",{\"0\":{\"6\":1}}],[\"文件模块\",{\"0\":{\"4\":1}}],[\"10\",{\"0\":{\"86\":1}}],[\"127\",{\"1\":{\"34\":2,\"36\":1}}],[\"1\",{\"0\":{\"6\":1,\"33\":1,\"57\":1},\"1\":{\"34\":2,\"36\":1,\"61\":1,\"64\":1,\"82\":1}}],[\"及示例\",{\"0\":{\"5\":1,\"32\":1,\"56\":1}}],[\"所有\",{\"0\":{\"5\":1,\"32\":1,\"56\":1}}],[\"删除等操作\",{\"1\":{\"4\":1}}],[\"写入响应头\",{\"1\":{\"41\":1}}],[\"写入\",{\"1\":{\"4\":1}}],[\"模块创建的子进程中发送消息到父进程\",{\"1\":{\"79\":1}}],[\"模块主要用于\",{\"1\":{\"53\":1}}],[\"模块\",{\"0\":{\"91\":1},\"1\":{\"4\":1,\"31\":1,\"53\":1,\"55\":1}}],[\"模块是\",{\"1\":{\"4\":1,\"31\":1,\"55\":1}}],[\"json\",{\"1\":{\"41\":2,\"44\":1}}],[\"js\",{\"1\":{\"4\":1,\"31\":1,\"55\":2,\"58\":3,\"62\":1,\"71\":1,\"72\":1,\"73\":2,\"74\":1,\"76\":1,\"77\":1,\"88\":2}}],[\"前端\",{\"0\":{\"2\":1}}],[\"代码笔记\",{\"0\":{\"1\":1}}],[\"🛠️\",{\"0\":{\"78\":1}}],[\"📊\",{\"0\":{\"75\":1}}],[\"🔍\",{\"0\":{\"70\":1}}],[\"🛑\",{\"0\":{\"60\":1}}],[\"🔒\",{\"0\":{\"53\":1}}],[\"📥\",{\"0\":{\"50\":1}}],[\"📬\",{\"0\":{\"38\":1}}],[\"📡\",{\"0\":{\"35\":1,\"63\":1}}],[\"🖥️\",{\"0\":{\"33\":1,\"66\":1}}],[\"👀\",{\"0\":{\"29\":1}}],[\"📂\",{\"0\":{\"26\":1}}],[\"📄\",{\"0\":{\"23\":1}}],[\"🗂️\",{\"0\":{\"18\":1}}],[\"🗑️\",{\"0\":{\"12\":1}}],[\"📖\",{\"0\":{\"6\":1}}],[\"📚\",{\"0\":{\"5\":1,\"32\":1,\"56\":1}}],[\"🚀\",{\"0\":{\"86\":1},\"1\":{\"0\":1}}],[\"😊\",{\"1\":{\"0\":1}}],[\"让我们一起探索更多可能吧\",{\"1\":{\"0\":1}}],[\"欢迎留下你的足迹和建议\",{\"1\":{\"0\":1}}],[\"欢迎来到我的个人空间\",{\"1\":{\"0\":1}}],[\"希望你能在这里度过愉快的时光\",{\"1\":{\"0\":1}}],[\"希望通过这个平台与更多志同道合的朋友交流分享\",{\"1\":{\"0\":1}}],[\"旅行和美食\",{\"1\":{\"0\":1}}],[\"闲暇时\",{\"1\":{\"0\":1}}],[\"探索未知的领域\",{\"1\":{\"0\":1}}],[\"喜欢挑战自我\",{\"1\":{\"0\":1}}],[\"我也享受阅读\",{\"1\":{\"0\":1}}],[\"我是一个热爱编程和创作的人\",{\"1\":{\"0\":1}}],[\"我都希望你能在这里找到属于你的内容\",{\"1\":{\"0\":1}}],[\"还是寻找一些灵感和创意\",{\"1\":{\"0\":1}}],[\"无论你是想了解我的项目经验\",{\"1\":{\"0\":1}}],[\"对设计的执着以及对生活的无限好奇\",{\"1\":{\"0\":1}}],[\"你将发现我对技术的热情\",{\"1\":{\"0\":1}}],[\"介绍页\",{\"0\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
